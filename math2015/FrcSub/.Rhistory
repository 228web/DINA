nrow(q)
ncol(q)
matrix(1,5,2)
2**3
3 **3
  print('l总数:'+str(2 ** qj)+',i总数:'+str(datai)+',l:'+str(l))
  print('l总数:'+str(2 ** 3)+',i总数:'+str(5)+',l:'+str(10))
  print('l总数:'+(2 ** 3)+',i总数:'+str(5)+',l:'+str(10))
cat('l总数:',(2 ** 3),',i总数:',str(5)',l:',str(10))
cat('l总数:',2 ** 3,'i总数:',5,'l:',10)
for i in 10{
for (i in 10){
 i++;
for (i in 10){
 i++
print(i)
}
}
for (i in 1:10){
print(i)
}
ma <- matrix(1,3,2)
print(ma)
ma
ma[1][1]
ma[1][1] = 0
ma
q[1]
q
q[,1]
q[1,]
merge(q[1,])
paste(q[1,],sep='')
q[1,] & 250
q[1,] & 128
q[1,] && 128
q[1,] & as.vector(128)
 as.vector(128)
 as.vector(127)
 as.vector(127)
strtoi( paste(q[1,],sep=''))
strtoi( paste(q[1,],sep=''))&128
strtoi( paste(q[1,],sep=''))&
80
strtoi( paste(q[1,],sep=''),base =10)
strtoi( paste(q[1,],sep=''),base =2)
strtoi( paste(q[1,],sep=''),base =8)
intToBits(128)
as.numeric(q[1,])
q[1,]
as.numeric(q[1,])
is.numeric(as.numeric(q[1,]))
as.numeric(q[1,])
as.numeric(q[1,]) & 128
class(as.numeric(q[1,]) )
as.numeric(0 0 1 1 )
as.numeric(0 0 1 1)
as.numeric("00110")
as.numeric(parse(q[1,],seq=''))
as.numeric(parse(q[1,],seq=""))
as.numeric(paste(q[1,],seq=""))
as.numeric("0""0""1""1""0")
128&127
128 && 127
128 && 127
q[1,]
q[1,] &
1
q[1,] & 1 ==TRUE
q[1,] & 1 == q[1,]
q[1,] & c[1,0,1,0,1,0,1,0] == q[1,]
q[1,] & c(1,0,1,0,1,0,1,0) == q[1,]
q[1,] & c(1,0,1,0,1,0,1,0) == q[1,]&q[q,]
q[1,] & c(1,0,1,0,1,0,1,0) == q[1,]&q[1,]
class( q[1,] & c(1,0,1,0,1,0,1,0) )
as.vctors(q[1,] & c(1,0,1,0,1,0,1,0)) == q[1,]
as.vectors(q[1,] & c(1,0,1,0,1,0,1,0)) == q[1,]
as.vector(q[1,] & c(1,0,1,0,1,0,1,0)) == q[1,]
all.equal(q[1,] & c(1,0,1,0,1,0,1,0))
all.equal(q[1,] , c(1,0,1,0,1,0,1,0))
isTrue(all.equal(q[1,] , c(1,0,1,0,1,0,1,0)))
identical(q[1,] , c(1,0,1,0,1,0,1,0))
identical(q[1,] , c(1,1,1,0,1,0,1,0))
identical(q[1,] , c(0,0,0,1,0,0,1,0))
identical(q[1,] , c(0,0,0,1,0,1,1,0))
q[1,]
identical(q[1,] , c(0,0,0,1,0,1,1,0))
class(q[1,])
class(c(0,0,0,1,0,1,1,0))
identical(as.vector(q[1,]) , c(0,0,0,1,0,1,1,0))
identical(as.vector(q[1,]) , as.vector(c(0,0,0,1,0,1,1,0)))
class((as.vector(q[1,]))
;
class((as.vector(q[1,])))
class(as.vector(c(0,0,0,1,0,1,1,0)))
class(q[1,])
data.frame(c(0,0,0,1,0,1,1,0))
class(data.frame(c(0,0,0,1,0,1,1,0)))
identical(as.vector(q[1,]) , data.frame(c(0,0,0,1,0,1,1,0)))
identical(q[1,] , data.frame(c(0,0,0,1,0,1,1,0)))
identical(q[1,] , data.frame(0,0,0,1,0,1,1,0)
)
q[1,]
data.frame(0,0,0,1,0,1,1,0)
all.equal(q[1,] , data.frame(0,0,0,1,0,1,1,0)
)
all.equal(q[1,] , c(0,0,0,1,0,1,1,0))
all.equal(as.vector(q[1,]) , c(0,0,0,1,0,1,1,0))
all.equal(as.vector(q[1,]) , list(0,0,0,1,0,1,1,0))
isTRUE(all.equal(as.vector(q[1,]) , list(0,0,0,1,0,1,1,0)))
isTRUE(as.vector(q[1,])== c(0,0,0,1,0,1,1,0)))
isTRUE(as.vector(q[1,])== c(0,0,0,1,0,1,1,0))
isTRUE(q[1,]== c(0,0,0,1,0,1,1,0))
(q[1,]== c(0,0,0,1,0,1,1,0))
isTRUE(q[1,]== c(0,0,0,1,0,1,1,0))
as.numeric(q[1,])
class(as.numeric(q[1,]))
isTRUE( as.numeric(q[1,])== c(0,0,0,1,0,1,1,0))
class(as.numeric(q[1,])) c(0,0,0,1,0,1,1,0)
class(as.numeric( c(0,0,0,1,0,1,1,0))
)
isTRUE( as.numeric(q[1,])== as.numeric(c(0,0,0,1,0,1,1,0)))
 as.numeric(c(0,0,0,1,0,1,1,0))
 as.numeric(255)
255 %255
255 %254 
255 &254 
as.numeric(q[1,])
 as.numeric(c(0,0,0,1,0,1,1,0))
isTRUE( as.numeric(q[1,]),as.numeric(c(0,0,0,1,0,1,1,0)))
isTRUE( as.numeric(q[1,]) === as.numeric(c(0,0,0,1,0,1,1,0)))
isTRUE( as.numeric(q[1,]) = as.numeric(c(0,0,0,1,0,1,1,0)))
isTRUE( as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))
 as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0))
FALSE %in% as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0))
FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))
TRUE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))
False %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))
FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))
as.bitmode(10)
as.binmode(10)
as.otcmode(10)
as.octmode(10)
as.binmode(10)
readBin(10)
readBin(10setwd("D:/DINA/math2015/FrcSub"))
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0))))
        return 0
    else
        return 1
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for j in 1:dataj{
                  nl = nTrueOrFalse(q[j,], l)
                  if nl == 1:
                      if data[i][j] == 1:
                          IL[i][l] *= (1 - sg[j][0])
                      else:
                          IL[i][l] *= sg[j][0]
                  else:
                      if data[i][j] == 1:
                          IL[i][l] *= sg[j][1]
                      else:
                          IL[i][l] *= 1 - sg[j][1]
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return 0}
    else{
        return 1}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for j in 1:dataj{
                  nl = nTrueOrFalse(q[j,], l)
                  if nl == 1:
                      if data[i][j] == 1:
                          IL[i][l] *= (1 - sg[j][0])
                      else:
                          IL[i][l] *= sg[j][0]
                  else:
                      if data[i][j] == 1:
                          IL[i][l] *= sg[j][1]
                      else:
                          IL[i][l] *= 1 - sg[j][1]
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for j in 1:dataj{
                  nl = nTrueOrFalse(q[j,], l)
                  if nl == 1:
                      if data[i][j] == 1:
                          IL[i][l] *= (1 - sg[j][0])
                      else:
                          IL[i][l] *= sg[j][0]
                  else:
                      if data[i][j] == 1:
                          IL[i][l] *= sg[j][1]
                      else:
                          IL[i][l] *= 1 - sg[j][1]
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for (j in 1:dataj){
                  nl = nTrueOrFalse(q[j,], l)
                  if nl == 1:
                      if data[i][j] == 1:
                          IL[i][l] *= (1 - sg[j][0])
                      else:
                          IL[i][l] *= sg[j][0]
                  else:
                      if data[i][j] == 1:
                          IL[i][l] *= sg[j][1]
                      else:
                          IL[i][l] *= 1 - sg[j][1]
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for (j in 1:dataj){
                  nl = nTrueOrFalse(q[j,], l)
                  if (nl == 1){
                      if( data[i][j] == 1){
                          IL[i][l] *= (1 - sg[j][0])}
                      else{
                          IL[i][l] *= sg[j][0]}
}
                  else{
                      if( data[i][j] == 1){
                          IL[i][l] *= sg[j][1]}
                      else{
                          IL[i][l] *= 1 - sg[j][1]}
}
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for (j in 1:dataj){
                  nl = nTrueOrFalse(q[j,], l)
                  if (nl == 1){
                      if( data[i][j] == 1){
                          IL[i][l] = IL[i][l] *(1 - sg[j][0])}
                      else{
                          IL[i][l] = IL[i][l] *sg[j][0]}
}
                  else{
                      if( data[i][j] == 1){
                          IL[i][l] = IL[i][l] *sg[j][1]}
                      else{
                          IL[i][l] = IL[i][l] *(1 - sg[j][1]）}
}
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for (j in 1:dataj){
                  nl = nTrueOrFalse(q[j,], l)
                  if (nl == 1){
                      if( data[i][j] == 1){
                          IL[i][l] = IL[i][l] *(1 - sg[j][0])}
                      else{
                          IL[i][l] = IL[i][l] *sg[j][0]}
}
                  else{
                      if( data[i][j] == 1){
                          IL[i][l] = IL[i][l] *sg[j][1]}
                      else{
                          IL[i][l] = IL[i][l] *(1 - sg[j][1])}
}
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for (j in 1:dataj){
                  nl = nTrueOrFalse(q[j,], l)
                  if (nl == 1){
                      if( data[i][j] == 1){
                          IL[i][l] = IL[i][l] *(1 - sg[j][1])}
                      else{
                          IL[i][l] = IL[i][l] *sg[j][1]}
}
                  else{
                      if( data[i][j] == 1){
                          IL[i][l] = IL[i][l] *sg[j][2]}
                      else{
                          IL[i][l] = IL[i][l] *(1 - sg[j][2])}
}
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
data[2][3]
data
data[2]
data[2,]
data[2,3]
setwd("D:/DINA/math2015/FrcSub")
data <- read.csv("data.csv")
q <- read.csv("q.csv")
datai <- nrow(data)
dataj <- ncol(data)
qi <- nrow(q)
qj <- ncol(q)
sg = matrix(0.01,qi,2)
continueSG = TRUE
nTrueOrFalse <- function(q,l) {
    if (FALSE %in% (as.numeric(q[1,]) == as.numeric(c(0,0,0,1,0,1,1,0)))){
        return(0)}
    else{
        return (1)}
}
while(continueSG == TRUE){
      IL = matrix(1,datai, 2 ** qj)
      for( l in 1:2 ** qj){
          for( i in 1:datai){
              for (j in 1:dataj){
                  nl = nTrueOrFalse(q[j,], l)
                  if (nl == 1){
                      if( data[i,j] == 1){
                          IL[i,l] = IL[i,l] *(1 - sg[j,1])}
                      else{
                          IL[i,l] = IL[i,l] *sg[j,1]}
}
                  else{
                      if( data[i,j] == 1){
                          IL[i,l] = IL[i,l] *sg[j,2]}
                      else{
                          IL[i,l] = IL[i,l] *(1 - sg[j,2])}
}
  }
}
      cat('l总数:',2 ** qj,',i总数:',datai,',l:',l)
}
      print("IL是训练集学生，所有技能模式的似然概率矩阵")
      print(IL)
break
}
q()
